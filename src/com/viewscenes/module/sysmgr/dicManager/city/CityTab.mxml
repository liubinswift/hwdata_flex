<?xml version="1.0" encoding="utf-8"?>
<system:BasePage xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:system="com.morcha4.frame.system.*" 
				 width="100%" height="100%"  backgroundColor1="0xe3d4bd" backgroundColor2="0xaf8555" 
				 xmlns:timecomp="com.viewscenes.utils.timecomp.*" xmlns:DataGrid="mor.DataGrid.*" creationComplete="initApp();"
				 xmlns:util="com.viewscenes.utils.*"
				 xmlns:mx="library://ns.adobe.com/flex/mx"
				 PAGE_SHOW="reset()"
				 xmlns:flipBar="com.viewscenes.utils.flipBar.*">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.morcha4.RPC.RPCException;
			import com.morcha4.RPC.RPCManager;
			import com.morcha4.RPC.request.RORequestParam;
			import com.morcha4.editor.ComboBoxEditor;
			import com.morcha4.editor.EditorManager;
			import com.morcha4.editor.TextEditor;
			import com.morcha4.util.RendererUtil;
			import com.viewscenes.beans.dicManager.ZdicCityBean;
			import com.viewscenes.global.DataManager;
			import com.viewscenes.global.SystemInit;
			import com.viewscenes.global.comp.MM;
			import com.viewscenes.utils.StringTool;
			
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ArrayUtil;
			import mx.utils.ObjectUtil;
			
			import spark.events.GridItemEditorEvent;
			[Bindable]
			private var listStat:ArrayCollection = new ArrayCollection();
			private var insertListStat:ArrayCollection = new ArrayCollection();
			private var updateListStat:ArrayCollection = new ArrayCollection();
			
			//语言
			[Bindable]
			public var lanaguageArr:ArrayCollection = new ArrayCollection;
			//国家
			[Bindable]
			public var contryArr:ArrayCollection = new ArrayCollection;
			//城市 
			[Bindable]
			private var cityArr:ArrayCollection=new ArrayCollection;
			[Bindable]private var selectedCounts:int = 0;  //选择总数
			
			
			private var dellist:String = "";//删除详细数据id (多个id以逗号分隔)
			
			
			public function initApp():void{
				getLanguageList();
				getCountryList();
			}
			private function reset():void{
				getLanguageList();
				getCountryList();
			}
			/**
			 * 
			 * 语言
			 * */
			private function getLanguageList():void{
				var obj:Object = new Object;
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.common.Common","getLanguageList",obj,getLanguageListBack,DataManager.showErrorMessageBack));
			}
			
			private function getLanguageListBack(arr:ArrayCollection):void{
				lanaguageArr.removeAll();
				
				for(var i:int = 0;i<arr.length; i++){
					var obj:Object = arr.getItemAt(i);
					
					lanaguageArr.addItemAt({label:obj.language_name,value:obj.language_id},i);
				}
			}
			/**
			 * 
			 * 国家
			 * */
			private function getCountryList():void{
				var obj:Object = new Object;
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.common.Common","getCountryList",obj,getCountryListBack,DataManager.showErrorMessageBack));
			}
			
			private function getCountryListBack(arr:ArrayCollection):void{
				
				contryArr.removeAll();
				
				contryArr = arr;
			}
			
			/**
			 * 查询
			 * */
			private function getCity():void
			{ 
				this.clearPage();
				listStat.removeAll();
				con_clewlabel(clew_label,true,'正在查询，请稍候...');
				var bean:ZdicCityBean = new ZdicCityBean();
				bean.city =city.text;
				bean.contry =contry.text;
//				bean.capital =capital.text;
				bean.ciraf =ciraf.text;
				pagebar.m_sendCmd(new RORequestParam("com.viewscenes.web.sysmgr.dicManager.CityTab","getCity",bean,_getCity,onfault));
			}
			
			private function _getCity(list:ArrayCollection):void{ 
				con_clewlabel(clew_label,false);
				this.listStat=list;
				
				listStat.refresh();
				if(listStat.length==0){
					
					con_clewlabel(clew_label,true,"无查询数据！");
				}
			}
			
			
			/**
			 * 控制datagrid的提示框是否显示，以及显示内容
			 * author:cht
			 * **/
			public function con_clewlabel(_component:Label,_visible:Boolean,_label:String="")
			{
				_component.visible=_visible;
				_component.includeInLayout=_visible;
				_component.text=_label;
			}
			
			
			/**
			 * 导出excel
			 * */
			private function getCityExcel():void
			{
				var url:String="com.viewscenes.web.sysmgr.dicManager.CityTab";
				var func:String="getCityExcel";
				
				var head:String = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r';
				head += '<msg type="'+url+'" function="'+func+'">\r';
				var xmlText:String = head;
				xmlText += "<city>"+city.text+"</city>";
				xmlText += "<contry>"+contry.text+"</contry>";
				xmlText += "<ciraf>"+ciraf.text+"</ciraf>";
				xmlText += "</msg>";				
				flash.external.ExternalInterface.call("toExcel",xmlText);
				
			}
			
			
			//选择点中后执行的方法
			private function changeSelect(obj:Object):void{
				//				Alert.show(obj.data.isSelected);
				selectAll.selected=false;
				if(obj.data.isSelected=="true"){
					this.selectedCounts=selectedCounts+1;  
				}else{
					this.selectedCounts=selectedCounts-1; 
				}
				if(selectedCounts==listStat.length){
					selectAll.selected=true;
				}
			}
			
			private function clearPage():void{  //下一页或者上一页时需要把选择状态和选择总数清零
				selectedCounts = 0;
				selectAll.selected = false;
			}
			
			
			/**
			 * 选择全部
			 */
			private function selectAllItem():void{
				
				if(listStat == null || listStat.length ==0){
					return;
				}
				var check:Boolean = selectAll.selected;
				for(var i:int=0; i<listStat.length; i++){
					var Obj:Object = listStat.getItemAt(i) as Object;
					Obj.isSelected = check.toString();
				}
				
				listStat.refresh(); //这个必须有，因为Obj.isSelected的值有变化，列表结果的dataProvider需要重新装载，即重新渲染
				if(selectAll.selected){
					selectedCounts = grid.dataProvider.length;  //selectedCounts赋值
				} else{
					selectedCounts = 0; 
				}
			}
			
			
			/**
			 * 删除
			 **/
			private function clickDeleteCity():void{
				
				dellist ="";
				var del_number:Number = 0;
				for(var i:int=grid.dataProvider.length-1;i>=0;i--)
				{
					if(grid.dataProvider[i].isSelected=="true")
					{
						var id:String = grid.dataProvider[i].id;
						
						if(del_number==0)
						{
							
							dellist = "'"+id+"'";
							
							
						} else{
							dellist += ","+"'"+id+"'";
						}
						del_number++;
					}
				}
				
				if(dellist!=""){
					MM.show("您确定删除吗?","删除确认",'',clickDeleteChoose,true,null,null);
				}
				else{
					MM.show("请选择要删除的信息","警告");
					return;
				}
			}
			
			
			//选择删除任务
			private function clickDeleteChoose():void{
				deleteDetailData(dellist);
				
			}
			
			
			/**
			 * 删除查询的详细数据
			 **/
			public function deleteDetailData(dellist:String):void{
				selectAll.selected = false;
				for(var i:int=grid.dataProvider.length-1;i>=0;i--) //在前台删除
				{
					if(grid.dataProvider[i].isSelected=="true")
					{
						grid.dataProvider.removeItemAt(i);
						this.selectedCounts=selectedCounts-1;
					}
				}
				
				var obj:Object = new Object();//在后台删除
				
				obj.dellist=dellist;
				
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.sysmgr.dicManager.CityTab","delCity",
					obj,_deleteCity,onfault))
				
			}
			
			private function _deleteCity(res:String):void{ 		
				getCity();
				DataManager.showErrorMessage(res);			
			}
			
			
			private function onfault(e:RPCException):void
			{
				
				MM.show(e.message);
			}
			
			/**
			 * 导出txt
			 * */
			private function getCityTxt():void
			{	
				var url:String="com.viewscenes.web.sysmgr.dicManager.CityTab";
				var func:String="getCityTxt";
				
				var head:String = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r';
				head += '<msg type="'+url+'" function="'+func+'">\r';
				var xmlText:String = head;
				xmlText += "</msg>";
				
				flash.external.ExternalInterface.call("toExcel",xmlText);
				
			}
			
			
			public function addCityData():void{
				var pop1:AddCityForm = AddCityForm(PopUpManager.createPopUp(this,AddCityForm,true));
				
				
				pop1.addlanaguageArr = StringTool.clone(lanaguageArr);
				pop1.addcontryArr = StringTool.clone(contryArr);
				PopUpManager.centerPopUp(pop1);
				
				pop1.addEventListener("City_list_refresh",refreshCityList);
				
				
			}
			
			
			private function updateCity(obj:Object):void{
				openEditCityForm(obj.data);
			}
			private function openEditCityForm(obj:Object):void{
				var pop:EditCityForm = EditCityForm(PopUpManager.createPopUp(this,EditCityForm,true));
				
				pop.lanaguageArr = StringTool.clone(lanaguageArr);
				pop.contryArr = StringTool.clone(contryArr);
				pop.setCity(obj);
				PopUpManager.centerPopUp(pop);
				pop.addEventListener("City_list_refresh",refreshCityList);
			}
			
			protected function refreshCityList(event:Event):void
			{	
				var si:SystemInit=new SystemInit();
				si.getConfigData();
				getCity();
			}
			
			private function continentFuc(item:Object,gc:GridColumn):String
			{
				var continents_id:String="";
				if(item.continents_id==0)
					continents_id="亚洲";
				else if(item.continents_id==1)
					continents_id="欧洲";
				else if(item.continents_id==2)
					continents_id="非洲";
				else if(item.continents_id==3)
					continents_id="北美洲";
				else if(item.continents_id==4)
					continents_id="南美洲";
				else if(item.continents_id==5)
					continents_id="大洋洲";
				else if(item.continents_id==6)
					continents_id="南极洲";
				return continents_id;
			}
			
			private function summerFuc(item:Object,gc:GridColumn):String
			{
				var summer:String="";
				if(item.summer==0)
					summer="无夏令";
				else if(item.summer==1)
					summer="有夏令";
				return summer;
			}
			
		]]>
	</fx:Script>
	
	
	<s:VGroup width="100%" height="100%">
		<s:HGroup height="25" width="100%" verticalAlign="middle" >
			<s:HGroup width="50%" horizontalAlign="left" verticalAlign="middle" >
				<s:Label text="城市"/>
				<s:TextInput width="80" id="city"/>
				<s:Label text="国家"/>
				<s:TextInput width="80" id="contry"/>
				<!--
				<s:Label text="首都"/>
				<s:TextInput width="80" id="capital" />
				-->
				<s:Label text="CIRAF区"/>
				<s:TextInput width="80" id="ciraf"/>
			</s:HGroup>
			<s:HGroup width="50%"  horizontalAlign="right" verticalAlign="middle">
				<s:Button buttonMode="true" label="查 询" width="100" click="getCity();"/>
				<s:Button buttonMode="true" id="addset" width="100" label="添加"  click="addCityData()"/>
				
				<s:Button buttonMode="true" id="delset" width="100" label="删除所选"  click="clickDeleteCity()"/>
				<s:Button buttonMode="true" label="导出Excel" width="100" click="getCityExcel();"/>
				<!--s:Button label="导出数据" width="100" click="getCityTxt();"/-->
			</s:HGroup>			
			
		</s:HGroup>
		
		<s:Group width="100%" height="100%">
			<s:DataGrid id="grid" width="100%" height="100%" dataProvider="{listStat}" editable="false" textAlign="center">
				<s:columns>
					<s:ArrayCollection>
						<s:GridColumn  headerText="选择" width="60" editable="false" itemRenderer="{RendererUtil.getCheckBoxRenderer(changeSelect)}"  />
						<s:GridColumn dataField="city" headerText="城市" />
						<s:GridColumn dataField="contry" headerText="国家"  />
						<s:GridColumn dataField="capital" headerText="首都" />
						<s:GridColumn dataField="continents_id" headerText="大洲" labelFunction="continentFuc" />
						<s:GridColumn dataField="longitude" headerText="经度"/>
						<s:GridColumn dataField="latitude" headerText="纬度"/>
						<s:GridColumn dataField="ciraf" headerText="ciraf区"/>
						<s:GridColumn dataField="elevation" headerText="海拔"/>
						<s:GridColumn dataField="default_language" headerText="默认语言"/>
						<s:GridColumn dataField="voltage" headerText="电压"/>
						<s:GridColumn dataField="moveut" headerText="时差"/>
						<s:GridColumn dataField="summer" headerText="夏令" labelFunction="summerFuc"/>
						<s:GridColumn  minWidth="50" headerText="修改" itemRenderer="{RendererUtil.getButtonRenderer('修改',updateCity)}"/>
						
					</s:ArrayCollection>
				</s:columns>
			</s:DataGrid>
			<s:Label text="正在查询，请稍候..."  color="0x000000" id="clew_label" y="{grid.columnHeaderGroup.height+10}" width="100%" textAlign="center" visible="false" includeInLayout="false" />		
		</s:Group>	
		
		
		<s:HGroup  width="100%" height="30" verticalAlign="middle" gap="10">
			<s:CheckBox id="selectAll" selected="false" change="selectAllItem()"/>
			<s:Label text="全选"/> 
			
			<s:Label width="20"/>
			
			<!--分页组件所在地-->
			<flipBar:PageBar  id="pagebar" rowConutOfPage="40" totalPageQuery="10" height="20"/>
			
			<!--flipBar:PageBar width="100%" id="pagebar" rowConutOfPage="20" totalPageQuery="5" height="20"/-->
		</s:HGroup> 
		
	</s:VGroup>
	
	
	
</system:BasePage>	

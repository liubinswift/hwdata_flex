<?xml version="1.0" encoding="utf-8"?>
<system:BasePage xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:system="com.morcha4.frame.system.*" 
				 width="100%" height="100%"  backgroundColor1="0xe3d4bd" backgroundColor2="0xaf8555" 
				 xmlns:timecomp="com.viewscenes.utils.timecomp.*" xmlns:DataGrid="mor.DataGrid.*" creationComplete="initApp();"
				 xmlns:util="com.viewscenes.utils.*"
				 xmlns:flipBar="com.viewscenes.utils.flipBar.*"
				 PAGE_SHOW="reset()" xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.morcha4.RPC.RPCException;
			import com.morcha4.RPC.RPCManager;
			import com.morcha4.RPC.request.RORequestParam;
			import com.morcha4.editor.ComboBoxEditor;
			import com.morcha4.editor.EditorManager;
			import com.morcha4.editor.TextEditor;
			import com.morcha4.util.RendererUtil;
			import com.viewscenes.beans.pub.DicStateBean;
			import com.viewscenes.global.DataManager;
			import com.viewscenes.global.SystemInit;
			import com.viewscenes.global.comp.MM;
			import com.viewscenes.utils.ExportExcel;
			import com.viewscenes.utils.StringTool;
			
			import flash.utils.setTimeout;
			
			import flashx.textLayout.factory.StringTextLineFactory;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ArrayUtil;
			import mx.utils.ObjectUtil;
			
			import spark.events.GridItemEditorEvent;
			
			[Bindable]
			private var listStat:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var insertListStat:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var updateListStat:ArrayCollection = new ArrayCollection();
			[Bindable] 
			private var headendArr:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var comArray:ArrayCollection = new ArrayCollection([{label:"全部",code:""},{label:"统计",code:"1"},{label:"不统计",code:"0"}]);
			[Bindable]
			private var comprotocolArray:ArrayCollection = new ArrayCollection([{label:"全部",code:"0"},{label:"未迁移",code:"1"},{label:"已迁移",code:"2"}]);
			
			[Bindable]private var sTypeArray:ArrayCollection = new ArrayCollection([{label:"全部",value:""},{label:"采集点",value:"101"},{label:"遥控站",value:"102"}]);
			[Bindable]private var runTypeArray:ArrayCollection = new ArrayCollection([{label:"全部",value:""},{label:"在线",value:"1"},{label:"不在线",value:"0"}]);
			
			[Bindable]private var isdelArray:ArrayCollection = new ArrayCollection([{label:"否",value:0},{label:"是",value:1}]);
			[Bindable]private var selectedCounts:int = 0;  //选择总数
			//服务区
			[Bindable]
			public var serviceArr:ArrayCollection = new ArrayCollection;
			//语言
			[Bindable]
			public var lanaguageArr:ArrayCollection = new ArrayCollection;
			//国家
			[Bindable]
			public var countryArr:ArrayCollection = new ArrayCollection;
			//大洲
			[Bindable]
			private var stateArr:ArrayCollection= new ArrayCollection();
			
			private var dellist:String = "";//删除详细数据id (多个id以逗号分隔)
			
			private var flag_channellist:Boolean = true;
			
			
			public function initApp():void{
				getServiceList();
				getLanguageList();
				getCountryList();
				getStateList();
			}
			private function reset():void{
				getServiceList();
				getLanguageList();
				getCountryList();
				getStateList();
			}
			
			/**
			 * 
			 * 语言
			 * */
			private function getLanguageList():void{
				var obj:Object = new Object;
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.common.Common","getLanguageList",obj,getLanguageListBack,DataManager.showErrorMessageBack));
			}
			
			private function getLanguageListBack(arr:ArrayCollection):void{
				lanaguageArr.removeAll();
				
				for(var i:int = 0;i<arr.length; i++){
					var obj:Object = arr.getItemAt(i);
					
					lanaguageArr.addItemAt({label:obj.language_name,value:obj.language_id},i);
				}
			}
			/**
			 * 大洲
			 */
			private function getStateList():void{
				stateArr=StringTool.clone(DataManager.satateBeanArr);
				var bean:DicStateBean =new DicStateBean();
				bean.state_name="全部";
				stateArr.addItemAt(bean,0);
				state.selectedIndex=0;
			}
			/**
			 * 
			 * 国家
			 * */
			private function getCountryList():void{
				var obj:Object = new Object;
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.common.Common","getCountryList",obj,getCountryListBack,DataManager.showErrorMessageBack));
			}
			
			private function getCountryListBack(arr:ArrayCollection):void{				
				countryArr.removeAll();				
				countryArr=arr;
			}
			/**
			 * 
			 * 服务区
			 * */
			private function getServiceList():void{
				var obj:Object = new Object;
				
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.common.Common","getServiceList",obj,getServiceListBack,DataManager.showErrorMessageBack));
			}
			
			private function getServiceListBack(arr:ArrayCollection):void{
				
				serviceArr.removeAll();
				for(var i:int = 0;i<arr.length; i++){
					var obj:Object = arr.getItemAt(i);
					
					serviceArr.addItemAt({label:obj.chinese_name,value:obj.id},i);
				}
			}
			/**
			 * 查询
			 */
			private function getHeadend():void
			{ 
				this.clearPage();
				listStat.removeAll();
				con_clewlabel(clew_label,true,'正在查询，请稍候...');
				var obj:Object = new Object;
				
				
				obj.type_id =this.sType.selectedItem.value;
				obj.is_online =this.runType.selectedItem.value;
				//				obj.is_delete =this.is_delete.selectedItem.value;
				obj.shortname =shortname.text;
				obj.code =code.text;
				if(state.selectedIndex>0){
					obj.state=state.selectedItem.state;
				}else{
					obj.state="";
				}
				obj.com_id = com_id.selectedItem.code;
				obj.com_protocol = com_protocol.selectedItem.code;
				pagebar.m_sendCmd(new RORequestParam("com.viewscenes.web.sysmgr.dicManager.HeadendTab","getHeadend",obj,_getHeadend,onfault));
			}
			
			private function _getHeadend(list:ArrayCollection):void{ 
				con_clewlabel(clew_label,false);
				this.listStat=list;
				listStat.refresh();
				if(listStat.length==0){
					
					con_clewlabel(clew_label,true,"无查询数据！");
				}
			}
			
			
			/**
			 * 控制datagrid的提示框是否显示，以及显示内容
			 * author:cht
			 * **/
			public function con_clewlabel(_component:Label,_visible:Boolean,_label:String="")
			{
				_component.visible=_visible;
				_component.includeInLayout=_visible;
				_component.text=_label;
			}
			
			
			/**
			 * 导出excel
			 * */
			private function getHeadendExcel():void
			{	
				var number:int=0;
				var codes:String="";
				for(var i:int=grid.dataProvider.length-1;i>=0;i--)
				{
					if(grid.dataProvider[i].isSelected=="true")
					{
						var headcode:String = grid.dataProvider[i].code;
						
						if(number==0)
						{
							
							codes = "'"+headcode+"'";
							
							
						} else{
							codes += ","+"'"+headcode+"'";
						}
						number++;;
					}
				}
				var url:String="com.viewscenes.web.sysmgr.dicManager.HeadendTab";
				var func:String="getHeadendExcel";
				
				var head:String = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r';
				head += '<msg type="'+url+'" function="'+func+'">\r';
				var xmlText:String = head;
				xmlText += "<state>"+state.selectedItem.state+"</state>";
				xmlText += "<shortname>"+shortname.text+"</shortname>";
				xmlText += "<code>"+code.text+"</code>";
				xmlText +="<codes>"+codes+"</codes>";
				xmlText += "<sType>"+sType.selectedItem.value+"</sType>";
				xmlText += "<runType>"+runType.selectedItem.value+"</runType>";
				xmlText += "</msg>";
				flash.external.ExternalInterface.call("toExcel",xmlText);
			}
			
			private function exHeadenExcel(arr:ArrayCollection):void{
				ExportExcel.exportToExcelByDg(grid,arr,"站点信息");
			}
			//选择点中后执行的方法
			private function changeSelect(obj:Object):void{
				//				Alert.show(obj.data.isSelected);
				selectAll.selected=false;
				if(obj.data.isSelected=="true"){
					this.selectedCounts=selectedCounts+1;  
				}else{
					this.selectedCounts=selectedCounts-1; 
				}
				if(selectedCounts==listStat.length){
					selectAll.selected=true;
				}
			}
			
			private function clearPage():void{  //下一页或者上一页时需要把选择状态和选择总数清零
				selectedCounts = 0;
				selectAll.selected = false;
			}
			
			
			/**
			 * 选择全部
			 */
			private function selectAllItem():void{
				
				if(listStat == null || listStat.length ==0){
					return;
				}
				var check:Boolean = selectAll.selected;
				for(var i:int=0; i<listStat.length; i++){
					var Obj:Object = listStat.getItemAt(i) as Object;
					Obj.isSelected = check.toString();
					//					Alert.show(Obj.isSelected);
				}
				
				listStat.refresh(); //这个必须有，因为Obj.isSelected的值有变化，列表结果的dataProvider需要重新装载，即重新渲染
				if(selectAll.selected){
					selectedCounts = grid.dataProvider.length;  //selectedCounts赋值
				} else{
					selectedCounts = 0; 
				}
			}
			
			
			/**
			 * 删除
			 **/
			private function clickDeleteHeadend():void{
				
				dellist ="";
				var del_number:Number = 0;
				for(var i:int=grid.dataProvider.length-1;i>=0;i--)
				{
					if(grid.dataProvider[i].isSelected=="true")
					{
						var code:String = grid.dataProvider[i].code;
						var version:String = grid.dataProvider[i].version;
						if(del_number==0)
						{
							if(version=='V8')
							{
								dellist = "'"+code+version+"'";
							}else
							{
								dellist = "'"+code+"'";
							}
							
							
						} else{
							
							if(version=='V8')
							{
								dellist += ","+"'"+code+version+"'";
							}else
							{
								dellist += ","+"'"+code+"'";
							}
							
						}
						del_number++;
					}
				}
				if(dellist!=""){
					
					MM.show("您确定删除吗?","删除确认",'',clickDeleteChoose,true,null,null);
				}
				else{
					MM.show("请选择要删除的信息","警告");
					return;
				}
			}
			
			
			//选择删除任务
			private function clickDeleteChoose():void{
				deleteDetailData(dellist);
				
			}
			
			
			/**
			 * 删除查询的详细数据
			 **/
			public function deleteDetailData(dellist:String):void{
				selectAll.selected = false;
				//				Alert.show(IdList);
				for(var i:int=grid.dataProvider.length-1;i>=0;i--) //在前台删除
				{
					if(grid.dataProvider[i].isSelected=="true")
					{
						grid.dataProvider.removeItemAt(i);
						this.selectedCounts=selectedCounts-1;
					}
				}
				
				var obj:Object = new Object();//在后台删除
				
				obj.dellist=dellist;
				
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.sysmgr.dicManager.HeadendTab","deleteHead",
					obj,_deleteHeadend,onfault))
				
			}
			
			private function _deleteHeadend(obj:Object):void{ 
				//				var si:SystemInit = new SystemInit();  
				//				
				//				si.getConfigData();
				getHeadend();
				MM.show("删除成功");
				
			}
			
			
			public function addHeadendData():void{
				var pop:AddHeadForm = AddHeadForm(PopUpManager.createPopUp(this,AddHeadForm,true));
				
				pop.lanaguageArr = StringTool.clone(lanaguageArr);
				pop.countryArr = StringTool.clone(countryArr);
				pop.serviceArr = StringTool.clone(serviceArr);
				pop.stateArr= StringTool.clone(stateArr);
				PopUpManager.centerPopUp(pop);
				
				pop.addEventListener("Head_list_refresh",refreshHeadList);
				
				
			}
			
			
			
			
			/**
			 * 提交新增和修改的数据
			 **/
			public function commitHeadend():void{
				
				insertListStat.removeAll();
				updateListStat.removeAll();
				for(var i:int=0;i<listStat.length;i++){
					if(listStat.getItemAt(i).isSelected=="true"){
						if(listStat.getItemAt(i).Headend ==""){//说明是插入操作
							insertListStat.addItem(listStat.getItemAt(i));	
						}
						else{//说明是插入更新
							updateListStat.addItem(listStat.getItemAt(i));
						}
					}
				}
				
				if(insertListStat.length==0&&updateListStat.length==0){
					MM.show("请选择要确认的信息");
				}
				else{
					var obj:Object = new Object();
					obj.insert=insertListStat;
					obj.update=updateListStat;
					RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.sysmgr.dicManager.HeadendTab","modifyHeadend",obj,resultCommitAllHeadend,onfault));
				}
			}
			
			private function resultCommitAllHeadend(obj:Object):void{ 
				var resultList:ArrayCollection =new ArrayCollection;
				resultList=obj as ArrayCollection;
				MM.show("操作成功,成功插入"+resultList.getItemAt(0).toString()+"条,成功更新"+resultList.getItemAt(1).toString()+"条");
				getHeadend();
			}
			
			
			private function onfault(e:RPCException):void
			{
				
				MM.show(e.message);
			}
			
			private function updateHead(obj:Object):void{
				openEditHeadForm(obj.data);
			}
			private function openEditHeadForm(obj:Object):void{
				var pop:EditHeadForm = EditHeadForm(PopUpManager.createPopUp(this,EditHeadForm,true));
				pop.lanaguageArr = StringTool.clone(lanaguageArr);
				pop.countryArr = StringTool.clone(countryArr);
				pop.serviceArr = StringTool.clone(serviceArr);
				pop.stateArr=StringTool.clone(stateArr);
				pop.setHead(obj);
				PopUpManager.centerPopUp(pop);
				
				pop.addEventListener("Head_list_refresh",refreshHeadList);
			}
			protected function refreshHeadList(event:Event):void
			{
				// TODO Auto-generated method stub
				var st:SystemInit =new SystemInit();
				st.getConfigData();
				getHeadend();
				//				var si:SystemInit = new SystemInit();  
				
				//				si.getConfigData();
			}
			
			private function detailHead(obj:Object):void{
				openSeeHeadForm(obj.data);
				
			}
			
			private function openSeeHeadForm(obj:Object):void{				
				var popo:SeeHeadForm = SeeHeadForm(PopUpManager.createPopUp(this,SeeHeadForm,true));				
				popo.setHead(obj);
				popo.stateArr=StringTool.clone(stateArr);
				popo.serviceArr=StringTool.clone(serviceArr);
				PopUpManager.centerPopUp(popo);
				
			}
			private function type(data:Object):String{							
				return "遥控站";				
			}
			private function reportLabelFunc(item:Object,gc:GridColumn):String{
				if (item.reportLabelFunc=='0')
					return "不统计"
				else
					return "统计";
			}
			private function proLabelFunc(item:Object,gc:GridColumn):String{
				if (item.com_protocol=='2')
					return "已迁移"
				else
					return "未迁移";
			}
			
		]]>
	</fx:Script>
	
	
	<s:VGroup width="100%" height="100%"  verticalAlign="middle">		
		<s:HGroup  horizontalAlign="left" width="100%" height="25" verticalAlign="middle">
			<s:Label  textAlign="right"  text="大洲"/>
			<s:ComboBox width="80" id="state" dataProvider="{stateArr}" requireSelection="true"  labelField="state_name"/>			
			<!--s:Label  textAlign="right"  text="前端简称："/>
			<s:TextInput width="80" id="shortname"/-->				
			<s:Label  textAlign="right" text="站点名称："  />
			<s:TextInput width="80"  id="shortname" />				
			<s:Label  textAlign="right" text="站点代码：" />
			<s:TextInput width="80"  id="code" restrict="a-z\A-Z\0-9" maxChars="20"/>				
			<s:Label  textAlign="right" text="站点类型：" />
			<s:ComboBox width="80" id="sType" dataProvider="{sTypeArray}" requireSelection="true" />				
			<s:Label  textAlign="right" text="是否在线"  />
			<s:ComboBox id="runType" dataProvider="{runTypeArray}"  requireSelection="true" width="80"/>
			<s:Label width="80" textAlign="right" text="是否统计：" fontSize="12"/>
			<s:ComboBox width="100" id="com_id" dataProvider="{comArray}" requireSelection="true" styleName="text12"/>
			<s:Label width="80" textAlign="right" text="是否迁移：" fontSize="12"/>
			<s:ComboBox width="100" id="com_protocol" dataProvider="{comprotocolArray}" requireSelection="true" styleName="text12"/>
			
			<!--s:Label width="80" textAlign="right" text="是否删除"  "/>
			<s:ComboBox id="is_delete" dataProvider="{isdelArray}"  requireSelection="true" styleName="text12" width="100"/-->			
		</s:HGroup>
		<mx:HRule width="100%" strokeWidth="1" strokeColor="#a0a0a0" shadowColor="#000000" />
		<s:HGroup horizontalAlign="right" width="100%" height="25">
			<s:Button buttonMode="true" label="查 询" width="100" click="getHeadend();"/>
			<s:Button buttonMode="true" id="addset" width="100" label="添加"  click="addHeadendData()"/>				
			<s:Button buttonMode="true" id="delset" width="100" label="删除所选"  click="clickDeleteHeadend()"/>
			<s:Button buttonMode="true" label="导出Excel" width="100" click="getHeadendExcel();"/>
		</s:HGroup>
		
		<s:Group width="100%" height="100%" >
			<s:DataGrid id="grid" width="100%" height="100%" dataProvider="{listStat}" textAlign="center">
				<s:columns>
					<s:ArrayCollection>
						<s:GridColumn  headerText="选择" width="60" editable="false" itemRenderer="{RendererUtil.getCheckBoxRenderer(changeSelect)}"  />
						<s:GridColumn dataField="code" headerText="站点代码"/>
						<s:GridColumn dataField="shortname" headerText="站点名称" />
						<!--s:GridColumn dataField="longitude" headerText="经度"/>
						<s:GridColumn dataField="latitude" headerText="纬度" />
						<s:GridColumn dataField="site" headerText="站点"/>
						<s:GridColumn dataField="site_status" headerText="站点状态"/>
						<s:GridColumn dataField="station_name" headerText="发射台名称"/-->
						<s:GridColumn dataField="country" headerText="国家"/>
						<!--s:GridColumn dataField="occur_time" headerText="时区"/>
						<s:GridColumn dataField="summertime_begin" headerText="夏令开始"/>
						<s:GridColumn dataField="summertime_end" headerText="夏令结束"/-->
						<s:GridColumn dataField="person" headerText="维护人"/>
						<s:GridColumn dataField="person_phone" headerText="维护电话"/>
						<s:GridColumn dataField="time_diff" headerText="时差"/>
						<s:GridColumn dataField="com_id" headerText="是否统计" labelFunction="reportLabelFunc"/>
						<s:GridColumn dataField="com_protocol" headerText="是否迁移" labelFunction="proLabelFunc"/>
						<!--s:GridColumn dataField="type_id" headerText="站点类型" labelFunction="type"/-->
						<s:GridColumn  minWidth="50" headerText="修改" itemRenderer="{RendererUtil.getButtonRenderer('修改',updateHead)}"/>
						<s:GridColumn  minWidth="50" headerText="详情" itemRenderer="{RendererUtil.getButtonRenderer('详情',detailHead)}"/>
						
					</s:ArrayCollection>
				</s:columns>
			</s:DataGrid>
			<s:Label text="正在查询，请稍候..."  color="0x000000" id="clew_label" y="{grid.columnHeaderGroup.height+10}" width="100%" textAlign="center" visible="false" includeInLayout="false" />		
		</s:Group>	
		
		
		<s:HGroup  width="100%" height="30" verticalAlign="middle" gap="10">
			<s:CheckBox id="selectAll" selected="false" change="selectAllItem()"/>
			<s:Label text="全选"/> 
			
			<s:Label width="20"/>
			
			<!--分页组件所在地-->
			<flipBar:PageBar  id="pagebar" rowConutOfPage="40" totalPageQuery="3" height="20"/>
			
		</s:HGroup> 
		
	</s:VGroup>
	
	
	
</system:BasePage>	

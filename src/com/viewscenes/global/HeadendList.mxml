<?xml version="1.0" encoding="utf-8"?>
<advancedComboBox:AdvancedCombobox xmlns:fx="http://ns.adobe.com/mxml/2009" 
								   xmlns:s="library://ns.adobe.com/flex/spark" 
								   xmlns:mx="library://ns.adobe.com/flex/mx" 
								   creationComplete="init();"
								   change="station_changeHandler(this.selectedItem)"
								   requireSelection="true" 
								   labelFunction="mylabelFunc" 
								   dataProvider="{stationList}"
								   width="180"  xmlns:advancedComboBox="com.morcha4.ui.advancedComboBox.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.morcha4.frame.nav.NavManager;
			import com.morcha4.frame.system.AdvancedEvent;
			import com.morcha4.frame.system.EventBus;
			import com.viewscenes.beans.pub.ResHeadendBean;
			
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			
			import spark.components.ComboBox;
			import spark.events.IndexChangeEvent;
			
			
			public var stationListOra:ArrayCollection ;
			[Bindabel]
			public var stationList:ArrayCollection ;
			/**
			 * true带全部这项，false只有站点
			 */
			private var _headDataAll:Boolean = false;
			
			private function init():void{
				this.setDataProviderNew();
				EventBus.addEventListener(EventDeclare.SYSTEM_INIT_COMPLETED,onInitComplete);
			}
			
			public function setDataProviderNew():void{
				if(_headDataAll){
					stationList = DataManager.headendBeanAll;
					stationListOra = DataManager.headendBeanAll;
				} else{
					stationList = DataManager.headendBeanArr;
					stationListOra = DataManager.headendBeanArr;
				}
				if(this.textInput){
					this.dataProvider = stationList;
				}
			}
			public function set headDataAll(type:Boolean):void{
				_headDataAll = type;
				this.setDataProviderNew();
			}
			private function mylabelFunc(item:Object):String{
				if(item == null){
					return "";
				} else{
					return (item.shortname=='全部'?'全部':(item.shortname+'['+item.code+']'+'['+item.state_name+']'));
				}
			}
			private function onInitComplete(e:Event):void{
				setTimeout(processStation,10);
				//				processStation();
			}
			
			public function processStation():void{
				this.station_changeHandler(this.selectedItem);
			}
			
			
			protected function station_changeHandler(obj:Object):void
			{
				
				
				
				EventBus.dispatchEvent(new Event(EventDeclare.STATION_CHANGE,false,false));
				
			}
			
			
			
			
			
			
			
			private function doFilter(item:Object):Boolean{
				var locName:String = item.locationName;
				var stName:String = item.stationName;
				var pinyinLabel:String = item.pinyinLabel;
				
				var t:String = textInput.text.toLowerCase();
				
				if((locName.toLowerCase().indexOf(t))>-1 || (stName.indexOf(t))>-1 || pinyinLabel.indexOf(t)>-1){
					return true;
				}else{
					return false;
				}
				
			}
			
			/**
			 * 根据条件设置不同的数据
			 * type:  类型##值  如：type_id##101 state##1
			 * isAll: 是否含有全部这一项
			 */
			public function setDataProvider(type:String,isAll:Boolean=false):void{
				var list:ArrayCollection = new ArrayCollection();
				for(var i=0;i<stationListOra.length;i++){
					if((stationListOra.getItemAt(i) as ResHeadendBean)[type.split("##")[0]] == type.split("##")[1]){
						list.addItem(stationListOra.getItemAt(i));
					}
				}
				if(isAll){
					var allHead:ResHeadendBean = new ResHeadendBean();
					allHead.shortname = "全部";
					list.addItemAt(allHead,0);
				}
				this.dataProvider = list;
			}
			
		]]>
	</fx:Script>
	
</advancedComboBox:AdvancedCombobox>

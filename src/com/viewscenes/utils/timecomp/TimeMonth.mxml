<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"  minHeight="0" minWidth="0"
				   creationComplete="init();" backgroundColor="0xe3d4bd" borderVisible="false"  borderColor="#cccccc" borderStyle="solid" xmlns:tabbar="com.morcha4.ui.tabbar.*">
	<s:layout>
		<s:HorizontalLayout gap="-2" verticalAlign="middle"/>
	</s:layout>
	<s:Label text="月份："/>
	<s:TextInput id="oYear" restrict="0-9"  maxChars="4" width="40" text="{_year}" 
				 focusIn="onfocusIn(oYear)" focusOut="onfocusOut()" change="inputField_changeYears()"
				 focusAlpha="0" textAlign="right" />
	<mx:Text text="-" textAlign="center" width="14"/>
	<s:TextInput id="oMonth" restrict="0-9"  maxChars="2" width="30" text="{_month}" 
				 focusIn="onfocusIn(oMonth)" focusOut="onfocusOut()" change="inputField_changeMonths()" focusAlpha="0" textAlign="center"/>
	<s:HGroup id="timeBE" verticalAlign="middle" paddingBottom="0" paddingTop="0" paddingLeft="0" paddingRight="0"  gap="0">
		<s:Label text="   开始时间："/>
		<s:TextInput id="starttime" editable="false"  width="71" />
		<s:Label text="  结束时间："/>
		<s:TextInput id="endtime" editable="false" width="71" />
	</s:HGroup>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace timecomp "components.com.viewscenes.util.timecomp.*";
		timecomp|TimeMonth{
			borderColor:#cccccc;
			borderStyle:solid;
			backgroundColor:0xFFFFFF;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			/*
			** 公共方法 showtimeBE 设置是否显示开始时间、结束时间
			**
			*/
			import mx.controls.Alert;
			private var inputField:TextInput;
			[Bindable]
			public var _year:String="1900";
			[Bindable]
			public var _month:String="12";
			private var showtimeBEParam:Boolean = true;//显示开始结束时间
			
			private function init():void{
				initDate();
				timeBE.visible = showtimeBEParam;
				timeBE.includeInLayout = showtimeBEParam;
			}
			private function initDate():void{
				var nowDate:Date = new Date();
				setDate(nowDate);
			}
			
			/**
			 * 传入日期类型设置界面显示的时间
			 */
			public function setDate(date:Date):void{
				var nowDate:Date = new Date(date.getFullYear(),date.getMonth(),1,0,0,0);
				nowDate = new Date(nowDate.getTime()-1000*60*60*24);
				_year = nowDate.getFullYear().toString();
				_month = (nowDate.getMonth()+1)<10?"0"+(nowDate.getMonth()+1):(nowDate.getMonth()+1).toString();
				month2day(_year,_month);
			}
			private function onfocusIn(textInput:TextInput):void{
				inputField = textInput;
				textInput.selectAll();
			}
			/*
			*焦点从控件移开后，监测各个输入框的内容使其合法
			*/
			private function onfocusOut():void{
				var date:Date=new Date();
				var _year:Number=date.getFullYear();
				if(inputField==oYear){
					checkInput(1900,_year);
				}
				else if(inputField==oMonth){
					checkInput(1,12);
				}
			}
			
			private function checkInput(minNum:Number,maxNum:Number):void{
				if(inputField.text.length==0){
					inputField.text = minNum.toString();
				} else{
					var num:Number = Number(inputField.text);
					if(num>maxNum){
						inputField.text = maxNum.toString();
					}
					if(num<minNum){
						inputField.text = minNum.toString();
					}
				}
				if(maxNum.toString().length==2&&inputField.text.length==1){
					inputField.text = "0"+inputField.text;
				}
				month2day();
			}
			private function inputField_changeYears():void
			{
				if(oYear.text.length==4){
					oMonth.setFocus();
					month2day();
				}
			}
			
			private function inputField_changeMonths():void
			{
				if(oMonth.text.length>=2)
				{
					if(parseInt(oMonth.text)>12)
						oMonth.text='12';
					if(parseInt(oMonth.text)<=0)
						oMonth.text='01';
				}
				if(oMonth.text.length==0)
					oMonth.text='01';
				
				month2day();
			}
			
			private function month2day(_yearP:String="",_monthP:String=""):void
			{
				if(_yearP==""&&_yearP=="")
				{
					_year=oYear.text;
					_month=oMonth.text;
				} else{
					_year=_yearP;
					_month=_monthP;
				}
				var s_date:Date=new Date(parseInt(_year),parseInt(_month)-1,1);
				var e_date:Date=new Date(parseInt(_year),parseInt(_month)-1,33);
				
				
				e_date=new Date(e_date.getFullYear(),e_date.getMonth(),1);  //下个月的第一天
				e_date.setUTCDate(e_date.getUTCDate()-1);
				var month:Number=s_date.getMonth()+1;
				var s_month:String=month.toString();
				if(month<10)  s_month="0"+month.toString();
				
				var day:Number=s_date.getDate();
				var s_day:String=day.toString();
				if(day<10)  s_day="0"+day.toString();
				
				starttime.text=s_date.getFullYear()+"-"+s_month+"-"+s_day;
				
				month=e_date.getMonth()+1;
				var e_month:String=month.toString();
				if(month<10)  e_month="0"+month.toString();
				
				day=e_date.getDate();
				var e_day:String=day.toString();
				if(day<10)  e_day="0"+day.toString();
				endtime.text=e_date.getFullYear()+"-"+e_month+"-"+e_day;
			}
			
			public function setMonths(minus_month:int=0,minus_year:int=0):void   //月份设置，第一个参数是月份的减少数，第二个为年份的减少数。不传都默认为0
			{
				var date:Date=new Date();
				var year:int=date.getFullYear()+minus_year;
				var month:int=date.getMonth()+1+minus_month;
				if(month==0)
				{
					month=12;
					year=year-1;
				}
				else if(month<0)
				{
					month=month+12;
					year=year-1;
				}
				this.oYear.text=year.toString();
				if(month<10)
					this.oMonth.text="0"+month.toString();
				else
					this.oMonth.text=month.toString();
				month2day(year.toString(),month.toString());
			}
			
			/**
			 * 设置是否显示开始时间结束时间
			 * bb true显示 false不显示
			 */
			public function set showtimeBE(bb:Boolean):void{
				this.showtimeBEParam = bb;
			}
		]]>
	</fx:Script>
</s:BorderContainer>
